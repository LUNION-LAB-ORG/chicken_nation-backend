services:
  app:
    build:
      context: ../.
      dockerfile: Dockerfile
    container_name: chicken_nation_backend_dev
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/chicken_nation
      - PORT=8081
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '8082:8081'
    depends_on:
      - database
      - redis
    networks:
      - chicken_nation_network
    volumes:
      - ../uploads:/app/uploads
    restart: unless-stopped

  database:
    image: postgres:15-alpine
    container_name: chicken_nation_db
    environment:
      POSTGRES_DB: 'chicken_nation'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    ports:
      - '5432:5432'
    volumes:
      - chicken_nation_db_data:/var/lib/postgresql/data
    networks:
      - chicken_nation_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U prisma -d postgres']
      interval: 5s
      timeout: 2s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:8.2.1-alpine
    container_name: chicken_nation_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - chicken_nation_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

volumes:
  chicken_nation_db_data:
  redis_data:

networks:
  chicken_nation_network:
    driver: bridge
