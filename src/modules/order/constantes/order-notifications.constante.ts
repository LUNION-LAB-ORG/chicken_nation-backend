import { OrderStatus } from '@prisma/client';
import { notificationIcons } from 'src/modules/notifications/constantes/notifications.constante';

export const getOrderNotificationContent = (orderData: {
    reference: string;
    status: OrderStatus;
    amount: number;
    restaurant_name: string;
    customer_name: string;
}, type: 'customer' | 'restaurant') => {

    const statusConfig = {
        PENDING: {
            title: 'üéâ Nouvelle commande en attente !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} est bien enregistr√©e et attend la confirmation du restaurant ${orderData.restaurant_name}. Montant: ${orderData.amount} XOF.` :
                `Nouvelle commande ! #${orderData.reference} de ${orderData.customer_name}. Montant: ${orderData.amount} XOF. Veuillez la valider !`,
            icon: notificationIcons.joice.url,
            iconBgColor: notificationIcons.joice.color,
        },
        ACCEPTED: {
            title: '‚úÖ Commande accept√©e et en pr√©paration !',
            message: type === 'customer' ?
                `Bonne nouvelle ! Votre commande #${orderData.reference} chez ${orderData.restaurant_name} a √©t√© accept√©e et est maintenant en pr√©paration. Bient√¥t pr√™te !` :
                `La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© accept√©e. Le chef est aux fourneaux ! Montant: ${orderData.amount} XOF.`,
            icon: notificationIcons.ok.url,
            iconBgColor: notificationIcons.ok.color,
        },
        IN_PROGRESS: {
            title: 'üë®‚Äçüç≥ Commande en pleine pr√©paration !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} de ${orderData.restaurant_name} est activement en pr√©paration. √áa sent bon !` :
                `La commande #${orderData.reference} pour ${orderData.customer_name} est en cours de pr√©paration. Super ! Montant: ${orderData.amount} XOF.`,
            icon: notificationIcons.progress.url,
            iconBgColor: notificationIcons.progress.color,
        },
        READY: {
            title: 'üçΩÔ∏è Votre commande est pr√™te !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} chez ${orderData.restaurant_name} est pr√™te pour la livraison ou la r√©cup√©ration. Pr√©parez-vous √† d√©guster !` :
                `Commande pr√™te ! #${orderData.reference} de ${orderData.customer_name}. Montant: ${orderData.amount} XOF. Pr√™te pour le d√©part !`,
            icon: notificationIcons.good.url,
            iconBgColor: notificationIcons.good.color,
        },
        PICKED_UP: {
            title: 'üöó Commande en route !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} est en cours de livraison depuis ${orderData.restaurant_name}. Elle arrive tr√®s vite !` :
                `La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© prise en charge par le livreur. Montant: ${orderData.amount} XOF.`,
            icon: notificationIcons.delivery.url,
            iconBgColor: notificationIcons.delivery.color,
        },
        COLLECTED: {
            title: 'üì¶ Commande collect√©e avec succ√®s !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} a √©t√© collect√©e. Nous esp√©rons que vous appr√©cierez votre repas de ${orderData.restaurant_name} !` :
                `La commande #${orderData.reference} de ${orderData.customer_name} a bien √©t√© collect√©e. Montant: ${orderData.amount} XOF.`,
            icon: notificationIcons.collected.url,
            iconBgColor: notificationIcons.collected.color,
        },
        COMPLETED: {
            title: '‚úÖ Commande termin√©e !',
            message: type === 'customer' ?
                `Votre commande #${orderData.reference} de ${orderData.restaurant_name} a √©t√© livr√©e avec succ√®s ! Merci d'avoir choisi Chicken Nation. üòä` :
                `La commande #${orderData.reference} de ${orderData.customer_name} est maintenant termin√©e. Montant: ${orderData.amount} XOF. Bravo !`,
            icon: notificationIcons.joice.url,
            iconBgColor: notificationIcons.joice.color,
        },
        CANCELLED: {
            title: '‚ùå Commande annul√©e',
            message: type === 'customer' ?
                `D√©sol√© ! Votre commande #${orderData.reference} chez ${orderData.restaurant_name} a √©t√© annul√©e. Contactez le support pour plus d'infos.` :
                `Annulation : La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© annul√©e. Montant: ${orderData.amount} XOF.`,
            icon: 'https://cdn-icons-png.flaticon.com/512/3524/3524890.png',
            iconBgColor: '#DC3545',
        },
    };

    return statusConfig[orderData.status] || {
        title: 'üìã Mise √† jour de votre commande',
        message: type === 'customer' ?
            `Votre commande #${orderData.reference} a √©t√© mise √† jour. Consultez les d√©tails pour en savoir plus.` :
            `Une mise √† jour a √©t√© effectu√©e pour la commande #${orderData.reference} de ${orderData.customer_name}. Montant: ${orderData.amount} XOF.`,
        icon: 'https://cdn-icons-png.flaticon.com/512/3524/3524335.png', // Default icon
        iconBgColor: '#6C757D', // Default color
    };
}