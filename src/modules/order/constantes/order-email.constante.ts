import { OrderStatus } from "@prisma/client";
import { EmailComponentsService } from "src/modules/email/components/email.components.service";

export const getOrderEmailContent = (orderData: {
    reference: string;
    status: OrderStatus;
    amount: number;
    restaurant_name: string;
    customer_name: string;
    delivery_address?: string;
}, type: 'customer' | 'restaurant', emailComponentsService: EmailComponentsService) => {

    // Common order information for both customer and restaurant
    const commonOrderSummaryItems = [
        { label: 'R√©f√©rence de commande', value: orderData.reference },
        { label: 'Montant', value: `${orderData.amount} XOF`, isTotal: true }, // Using isTotal for amount
    ];

    const customerOrderSummaryItems = [
        ...commonOrderSummaryItems,
        { label: 'Restaurant', value: orderData.restaurant_name },
        ...(orderData.delivery_address ? [{ label: 'Adresse de livraison', value: orderData.delivery_address }] : []),
    ];

    const restaurantOrderSummaryItems = [
        ...commonOrderSummaryItems,
        { label: 'Client', value: orderData.customer_name },
    ];

    const statusConfig = {
        PENDING: {
            subject: 'üéâ Nouvelle commande en attente de validation',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üéâ'),
                    emailComponentsService.Message(`Votre commande #${orderData.reference} a √©t√© enregistr√©e avec succ√®s et est en attente de validation par le restaurant ${orderData.restaurant_name}.`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    // emailComponentsService.CtaButton('Suivre ma commande', 'YOUR_CUSTOMER_ORDER_TRACKING_LINK_HERE'), 
                    emailComponentsService.InfoBox('Vous recevrez une nouvelle notification par email d√®s que le restaurant aura accept√© votre commande.', '‚è±Ô∏è'),
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üéâ'),
                    emailComponentsService.Title('Nouvelle Commande Re√ßue !', 2),
                    emailComponentsService.Message(`Vous avez une nouvelle commande #${orderData.reference} de ${orderData.customer_name} en attente de votre action. Veuillez la consulter et la valider d√®s que possible.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                    // emailComponentsService.CtaButton('Voir la commande', 'YOUR_RESTAURANT_ORDER_LINK_HERE'), 
                    emailComponentsService.Alert('Veuillez traiter cette commande rapidement pour assurer une bonne exp√©rience client.', 'warning'),
                ].join('\n'),
        },
        ACCEPTED: {
            subject: '‚úÖ Votre commande a √©t√© accept√©e !',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, '‚úÖ'),
                    emailComponentsService.Message(`Bonne nouvelle ! Votre commande #${orderData.reference} a √©t√© accept√©e par ${orderData.restaurant_name} et est maintenant en pr√©paration.`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    // emailComponentsService.CtaButton('Suivre ma commande', 'YOUR_CUSTOMER_ORDER_TRACKING_LINK_HERE'),
                    emailComponentsService.ToastNotification('Vous serez inform√© √† chaque √©tape de l\'avancement de votre commande.', 'info'), // Toast for quick info
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, '‚úÖ'),
                    emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© accept√©e et est en cours de pr√©paration.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                    emailComponentsService.Divider(),
                    emailComponentsService.InfoBox('Assurez-vous que la pr√©paration se d√©roule sans accroc et mettez √† jour le statut lorsque la commande est pr√™te.', 'üìù'),
                ].join('\n'),
        },
        IN_PROGRESS: {
            subject: 'üë®‚Äçüç≥ Votre commande est en pr√©paration',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üë®‚Äçüç≥'),
                    emailComponentsService.Message(`Votre commande #${orderData.reference} chez ${orderData.restaurant_name} est en pleine pr√©paration. Encore un peu de patience !`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    emailComponentsService.InfoBox('Le restaurant s\'attelle √† pr√©parer vos d√©licieux plats avec soin.', 'üç≥'),
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üë®‚Äçüç≥'),
                    emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} est activement en pr√©paration.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                ].join('\n'),
        },
        READY: {
            subject: 'üçΩÔ∏è Votre commande est pr√™te √† √™tre r√©cup√©r√©e/livr√©e !',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üçΩÔ∏è'),
                    emailComponentsService.Message(`Excellente nouvelle ! Votre commande #${orderData.reference} de ${orderData.restaurant_name} est pr√™te. Elle sera bient√¥t en livraison ou vous pouvez la r√©cup√©rer.`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    // emailComponentsService.CtaButton('Suivre ma commande', 'YOUR_CUSTOMER_ORDER_TRACKING_LINK_HERE'),
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üçΩÔ∏è'),
                    emailComponentsService.Message(`La commande #${orderData.reference} pour ${orderData.customer_name} est pr√™te. Veuillez informer le livreur ou le client pour la r√©cup√©ration.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                    emailComponentsService.Alert('La commande est pr√™te. N\'oubliez pas de marquer son statut comme "Prise en charge" ou "Collect√©e" une fois qu\'elle quitte le restaurant.', 'info'),
                ].join('\n'),
        },
        PICKED_UP: {
            subject: 'üöó Votre commande est en route !',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üöó'),
                    emailComponentsService.Message(`Votre commande #${orderData.reference} de ${orderData.restaurant_name} est maintenant en cours de livraison. Elle arrivera bient√¥t !`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    // emailComponentsService.CtaButton('Suivre ma commande en direct', 'YOUR_CUSTOMER_ORDER_TRACKING_LINK_HERE', 'secondary'), // Different button variant
                    emailComponentsService.ToastNotification('Pr√©parez-vous √† d√©guster votre repas !', 'success'),
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üöó'),
                    emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© prise en charge par le livreur.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                    emailComponentsService.InfoBox('Le livreur est en route vers le client. Vous pouvez suivre l\'avancement via votre tableau de bord.', 'üöö'),
                ].join('\n'),
        },
        COLLECTED: {
            subject: 'üì¶ Votre commande a √©t√© collect√©e !',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üì¶'),
                    emailComponentsService.Message(`Votre commande #${orderData.reference} de ${orderData.restaurant_name} a bien √©t√© collect√©e. Nous esp√©rons que vous l'appr√©cierez !`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üì¶'),
                    emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© collect√©e par le client ou le livreur.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                ].join('\n'),
        },
        COMPLETED: {
            subject: '‚úÖ Votre commande est termin√©e !',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, '‚úÖ'),
                    emailComponentsService.Message(`Votre commande #${orderData.reference} de ${orderData.restaurant_name} a √©t√© livr√©e et termin√©e avec succ√®s. Merci d'avoir command√© chez nous !`),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    // emailComponentsService.CtaButton('Laisser un avis', 'YOUR_CUSTOMER_REVIEW_LINK_HERE'), // Optional: add a review link
                    // emailComponentsService.CtaButton('Commander √† nouveau', 'YOUR_CUSTOMER_ORDER_AGAIN_LINK_HERE'),
                    emailComponentsService.Quote('Un grand merci pour votre confiance et √† tr√®s bient√¥t pour de nouvelles saveurs !', 'L\'√©quipe Chicken Nation'), // Using Quote for a closing message
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, '‚úÖ'),
                    emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© marqu√©e comme termin√©e.`),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                    emailComponentsService.StatsGrid([
                        { label: 'Montant Total', value: `${orderData.amount} XOF`, icon: 'üí∞', color: emailComponentsService['theme'].colors.status.success },
                        { label: 'Client', value: orderData.customer_name, icon: 'üë§', color: emailComponentsService['theme'].colors.primary },
                    ]),
                ].join('\n'),
        },
        CANCELLED: {
            subject: '‚ùå Votre commande a √©t√© annul√©e',
            content: type === 'customer' ?
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, '‚ùå'),
                    emailComponentsService.Alert(`Votre commande #${orderData.reference} chez ${orderData.restaurant_name} a √©t√© annul√©e.`, 'error'), // Using Alert for cancellation
                    emailComponentsService.Message('Nous sommes d√©sol√©s pour ce d√©sagr√©ment. Si vous avez des questions, n\'h√©sitez pas √† nous contacter.'),
                    emailComponentsService.Summary(customerOrderSummaryItems),
                    emailComponentsService.InfoBox('Contacter le support')
                ].join('\n') :
                [
                    emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, '‚ùå'),
                    emailComponentsService.Alert(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© annul√©e.`, 'error'),
                    emailComponentsService.Message('Veuillez noter cette annulation dans vos registres.'),
                    emailComponentsService.Summary(restaurantOrderSummaryItems),
                ].join('\n'),
        },
    };

    return statusConfig[orderData.status] || {
        subject: 'üìã Mise √† jour de votre commande',
        content: type === 'customer' ?
            [
                emailComponentsService.Greeting(`Bonjour ${orderData.customer_name}`, 'üìã'),
                emailComponentsService.Message(`Votre commande #${orderData.reference} a √©t√© mise √† jour. Veuillez consulter les d√©tails ci-dessous.`),
                emailComponentsService.Summary(customerOrderSummaryItems),
                emailComponentsService.CtaButton('Voir les d√©tails de ma commande', 'YOUR_CUSTOMER_ORDER_TRACKING_LINK_HERE'),
            ].join('\n') :
            [
                emailComponentsService.Greeting(`Bonjour ${orderData.restaurant_name}`, 'üìã'),
                emailComponentsService.Message(`La commande #${orderData.reference} de ${orderData.customer_name} a √©t√© mise √† jour.`),
                emailComponentsService.Summary(restaurantOrderSummaryItems),
                emailComponentsService.CtaButton('Voir la commande', 'YOUR_RESTAURANT_ORDER_LINK_HERE'),
            ].join('\n'),
    };
};
